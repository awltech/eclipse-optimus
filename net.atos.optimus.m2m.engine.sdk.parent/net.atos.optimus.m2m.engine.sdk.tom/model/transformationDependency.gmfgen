<?xml version="1.0" encoding="UTF-8"?>
<gmfgen:GenEditorGenerator
    xmi:version="2.0"
    xmlns:xmi="http://www.omg.org/XMI"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:gmfgen="http://www.eclipse.org/gmf/2009/GenModel"
    sameFileForDiagramAndModel="true"
    diagramFileExtension="tom"
    domainFileExtension="tom_domain"
    pluginDirectory="/net.atos.optimus.m2m.engine.sdk.tom.diagram/src/main/java">
  <diagram
      visualID="1000"
      editPartClassName="TransformationSetsEditPart"
      itemSemanticEditPolicyClassName="TransformationSetsItemSemanticEditPolicy"
      canonicalEditPolicyClassName="TransformationSetsCanonicalEditPolicy"
      iconProviderPriority="Low"
      validationProviderPriority="Low">
    <diagramRunTimeClass
        href="../../../plugin/org.eclipse.gmf.runtime.notation/model/notation.genmodel#//notation/Diagram"/>
    <elementType
        xsi:type="gmfgen:MetamodelType"
        editHelperClassName="TransformationSetsEditHelper"/>
    <viewmap
        xsi:type="gmfgen:FigureViewmap"
        figureQualifiedClassName="org.eclipse.draw2d.FreeformLayer"/>
    <domainDiagramElement
        href="transformationDependency.genmodel#//tom/TransformationSets"/>
    <childNodes
        visualID="3003"
        editPartClassName="TransformationEditPart"
        itemSemanticEditPolicyClassName="TransformationItemSemanticEditPolicy"
        notationViewFactoryClassName="TransformationViewFactory"
        canonicalEditPolicyClassName="TransformationCanonicalEditPolicy"
        graphicalNodeEditPolicyClassName="TransformationGraphicalNodeEditPolicy"
        createCommandClassName="TransformationCreateCommand"
        containers="//@diagram/@compartments.0">
      <diagramRunTimeClass
          href="../../../plugin/org.eclipse.gmf.runtime.notation/model/notation.genmodel#//notation/Node"/>
      <elementType
          xsi:type="gmfgen:MetamodelType"
          editHelperClassName="TransformationEditHelper"/>
      <viewmap
          xsi:type="gmfgen:InnerClassViewmap"
          className="TransformationFigure"
          classBody="&#xA;/**&#xA; * @generated&#xA; */&#xA;public class TransformationFigure extends org.eclipse.draw2d.RectangleFigure {&#xA;&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel fFigureTransformationNameFigure; &#xA;&#xA;&#xA;&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public TransformationFigure() {&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;this.setForegroundColor(org.eclipse.draw2d.ColorConstants.black);&#xA;&#x9;this.setBackgroundColor(THIS_BACK&#xA;);&#xA;&#x9;&#x9;createContents();&#xA;&#x9;}&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private void createContents(){&#xA;&#xA;&#xA;fFigureTransformationNameFigure = new org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel();&#xA;&#xA;fFigureTransformationNameFigure.setText(&quot;&lt;name>&quot;);&#xA;&#xA;this.add(fFigureTransformationNameFigure);&#xA;&#xA;&#xA;&#x9;}&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel getFigureTransformationNameFigure() {&#xA;&#x9;&#x9;return fFigureTransformationNameFigure;&#xA;&#x9;}&#xA;&#xA;&#xA;}&#xA;&#xA;/**&#xA; * @generated&#xA; */&#xA;static final org.eclipse.swt.graphics.Color THIS_BACK = new org.eclipse.swt.graphics.Color(null, 162, 181, 205);&#xA;&#xA;">
        <attributes
            xsi:type="gmfgen:StyleAttributes"
            fixedForeground="true"
            fixedBackground="true"/>
        <attributes
            xsi:type="gmfgen:DefaultSizeAttributes"
            width="10"
            height="15"/>
      </viewmap>
      <modelFacet>
        <metaClass
            href="transformationDependency.genmodel#//tom/Transformation"/>
        <containmentMetaFeature
            href="transformationDependency.genmodel#//tom/TransformationSet/transformations"/>
        <childMetaFeature
            href="transformationDependency.genmodel#//tom/TransformationSet/transformations"/>
      </modelFacet>
      <labels
          visualID="5006"
          editPartClassName="TransformationNameEditPart"
          itemSemanticEditPolicyClassName="TransformationNameItemSemanticEditPolicy"
          notationViewFactoryClassName="TransformationNameViewFactory"
          elementIcon="true">
        <diagramRunTimeClass
            href="../../../plugin/org.eclipse.gmf.runtime.notation/model/notation.genmodel#//notation/Node"/>
        <viewmap
            xsi:type="gmfgen:ParentAssignedViewmap"
            getterName="getFigureTransformationNameFigure"
            figureQualifiedClassName="org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel"/>
        <modelFacet
            xsi:type="gmfgen:FeatureLabelModelFacet"
            parser="//@labelParsers/@implementations.0">
          <metaFeatures
              href="transformationDependency.genmodel#//tom/TransformationReference/name"/>
        </modelFacet>
      </labels>
    </childNodes>
    <childNodes
        visualID="3004"
        editPartClassName="Transformation2EditPart"
        itemSemanticEditPolicyClassName="Transformation2ItemSemanticEditPolicy"
        notationViewFactoryClassName="TransformationViewFactory"
        canonicalEditPolicyClassName="Transformation2CanonicalEditPolicy"
        graphicalNodeEditPolicyClassName="Transformation2GraphicalNodeEditPolicy"
        createCommandClassName="Transformation2CreateCommand"
        containers="//@diagram/@compartments.1">
      <diagramRunTimeClass
          href="../../../plugin/org.eclipse.gmf.runtime.notation/model/notation.genmodel#//notation/Node"/>
      <elementType
          xsi:type="gmfgen:SpecializationType"
          metamodelType="//@diagram/@childNodes.0/@elementType"/>
      <viewmap
          xsi:type="gmfgen:InnerClassViewmap"
          className="TransformationFigure"
          classBody="&#xA;/**&#xA; * @generated&#xA; */&#xA;public class TransformationFigure extends org.eclipse.draw2d.RectangleFigure {&#xA;&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel fFigureTransformationNameFigure; &#xA;&#xA;&#xA;&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public TransformationFigure() {&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;this.setForegroundColor(org.eclipse.draw2d.ColorConstants.black);&#xA;&#x9;this.setBackgroundColor(THIS_BACK&#xA;);&#xA;&#x9;&#x9;createContents();&#xA;&#x9;}&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private void createContents(){&#xA;&#xA;&#xA;fFigureTransformationNameFigure = new org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel();&#xA;&#xA;fFigureTransformationNameFigure.setText(&quot;&lt;name>&quot;);&#xA;&#xA;this.add(fFigureTransformationNameFigure);&#xA;&#xA;&#xA;&#x9;}&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel getFigureTransformationNameFigure() {&#xA;&#x9;&#x9;return fFigureTransformationNameFigure;&#xA;&#x9;}&#xA;&#xA;&#xA;}&#xA;&#xA;/**&#xA; * @generated&#xA; */&#xA;static final org.eclipse.swt.graphics.Color THIS_BACK = new org.eclipse.swt.graphics.Color(null, 162, 181, 205);&#xA;&#xA;">
        <attributes
            xsi:type="gmfgen:StyleAttributes"
            fixedForeground="true"
            fixedBackground="true"/>
        <attributes
            xsi:type="gmfgen:DefaultSizeAttributes"
            width="10"
            height="15"/>
      </viewmap>
      <modelFacet>
        <metaClass
            href="transformationDependency.genmodel#//tom/Transformation"/>
        <containmentMetaFeature
            href="transformationDependency.genmodel#//tom/TransformationSetExtension/transformations"/>
        <childMetaFeature
            href="transformationDependency.genmodel#//tom/TransformationSetExtension/transformations"/>
      </modelFacet>
      <labels
          visualID="5008"
          editPartClassName="TransformationName2EditPart"
          itemSemanticEditPolicyClassName="TransformationName2ItemSemanticEditPolicy"
          notationViewFactoryClassName="TransformationNameViewFactory"
          elementIcon="true">
        <diagramRunTimeClass
            href="../../../plugin/org.eclipse.gmf.runtime.notation/model/notation.genmodel#//notation/Node"/>
        <viewmap
            xsi:type="gmfgen:ParentAssignedViewmap"
            getterName="getFigureTransformationNameFigure"
            figureQualifiedClassName="org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel"/>
        <modelFacet
            xsi:type="gmfgen:FeatureLabelModelFacet"
            parser="//@labelParsers/@implementations.0">
          <metaFeatures
              href="transformationDependency.genmodel#//tom/TransformationReference/name"/>
        </modelFacet>
      </labels>
    </childNodes>
    <topLevelNodes
        visualID="2004"
        editPartClassName="TransformationSetEditPart"
        itemSemanticEditPolicyClassName="TransformationSetItemSemanticEditPolicy"
        notationViewFactoryClassName="TransformationSetViewFactory"
        canonicalEditPolicyClassName="TransformationSetCanonicalEditPolicy"
        compartments="//@diagram/@compartments.0"
        graphicalNodeEditPolicyClassName="TransformationSetGraphicalNodeEditPolicy"
        createCommandClassName="TransformationSetCreateCommand">
      <diagramRunTimeClass
          href="../../../plugin/org.eclipse.gmf.runtime.notation/model/notation.genmodel#//notation/Node"/>
      <elementType
          xsi:type="gmfgen:MetamodelType"
          editHelperClassName="TransformationSetEditHelper"/>
      <viewmap
          xsi:type="gmfgen:InnerClassViewmap"
          className="TransformationSetFigure"
          classBody="&#xA;/**&#xA; * @generated&#xA; */&#xA;public class TransformationSetFigure extends org.eclipse.draw2d.RectangleFigure {&#xA;&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel fFigureTransformationSetNameFigure; &#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private org.eclipse.draw2d.RectangleFigure fFigureTransformationSetCompartmentFigure; &#xA;&#xA;&#xA;&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public TransformationSetFigure() {&#xA;&#x9;&#x9;&#xA;&#x9;org.eclipse.draw2d.GridLayout layoutThis = new org.eclipse.draw2d.GridLayout();&#xA;&#x9;layoutThis.numColumns = 1;&#xA;&#x9;layoutThis.makeColumnsEqualWidth = true;&#xA;&#x9;layoutThis.horizontalSpacing = 0;&#xA;&#x9;layoutThis.verticalSpacing = 0;&#xA;&#x9;layoutThis.marginWidth = 0;&#xA;&#x9;layoutThis.marginHeight = 0;&#xA;&#x9;this.setLayoutManager(layoutThis);&#xA;&#xA;&#x9;&#x9;&#x9;this.setForegroundColor(org.eclipse.draw2d.ColorConstants.black);&#xA;&#x9;this.setBackgroundColor(THIS_BACK&#xA;);&#xA;this.setPreferredSize(new org.eclipse.draw2d.geometry.Dimension(getMapMode().DPtoLP(300)&#xA;, getMapMode().DPtoLP(300)&#xA;));&#xA;&#x9;&#x9;createContents();&#xA;&#x9;}&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private void createContents(){&#xA;&#xA;&#xA;org.eclipse.draw2d.RectangleFigure transformationSetUpperFigure0 = new org.eclipse.draw2d.RectangleFigure();&#xA;&#xA;transformationSetUpperFigure0.setFill(false);&#xA;transformationSetUpperFigure0.setOutline(false);&#xA;&#xA;&#xA;org.eclipse.draw2d.GridData constraintTransformationSetUpperFigure0 = new org.eclipse.draw2d.GridData();&#xA;constraintTransformationSetUpperFigure0.verticalAlignment = org.eclipse.draw2d.GridData.CENTER;&#xA;constraintTransformationSetUpperFigure0.horizontalAlignment = org.eclipse.draw2d.GridData.FILL;&#xA;constraintTransformationSetUpperFigure0.horizontalIndent = 0;&#xA;constraintTransformationSetUpperFigure0.horizontalSpan = 0;&#xA;constraintTransformationSetUpperFigure0.verticalSpan = 0;&#xA;constraintTransformationSetUpperFigure0.grabExcessHorizontalSpace = true;&#xA;constraintTransformationSetUpperFigure0.grabExcessVerticalSpace = false;&#xA;this.add(transformationSetUpperFigure0, constraintTransformationSetUpperFigure0);&#xA;&#xA;&#xA;&#x9;org.eclipse.draw2d.GridLayout layoutTransformationSetUpperFigure0 = new org.eclipse.draw2d.GridLayout();&#xA;&#x9;layoutTransformationSetUpperFigure0.numColumns = 1;&#xA;&#x9;layoutTransformationSetUpperFigure0.makeColumnsEqualWidth = true;&#xA;&#x9;layoutTransformationSetUpperFigure0.horizontalSpacing = 0;&#xA;&#x9;layoutTransformationSetUpperFigure0.verticalSpacing = 0;&#xA;&#x9;layoutTransformationSetUpperFigure0.marginWidth = 0;&#xA;&#x9;layoutTransformationSetUpperFigure0.marginHeight = 0;&#xA;&#x9;transformationSetUpperFigure0.setLayoutManager(layoutTransformationSetUpperFigure0);&#xA;&#xA;&#xA;&#xA;org.eclipse.draw2d.RectangleFigure transformationSetNameHolder1 = new org.eclipse.draw2d.RectangleFigure();&#xA;&#xA;transformationSetNameHolder1.setFill(false);&#xA;transformationSetNameHolder1.setOutline(false);&#xA;&#xA;&#xA;org.eclipse.draw2d.GridData constraintTransformationSetNameHolder1 = new org.eclipse.draw2d.GridData();&#xA;constraintTransformationSetNameHolder1.verticalAlignment = org.eclipse.draw2d.GridData.CENTER;&#xA;constraintTransformationSetNameHolder1.horizontalAlignment = org.eclipse.draw2d.GridData.CENTER;&#xA;constraintTransformationSetNameHolder1.horizontalIndent = 0;&#xA;constraintTransformationSetNameHolder1.horizontalSpan = 1;&#xA;constraintTransformationSetNameHolder1.verticalSpan = 1;&#xA;constraintTransformationSetNameHolder1.grabExcessHorizontalSpace = true;&#xA;constraintTransformationSetNameHolder1.grabExcessVerticalSpace = true;&#xA;transformationSetUpperFigure0.add(transformationSetNameHolder1, constraintTransformationSetNameHolder1);&#xA;&#xA;&#xA;&#x9;org.eclipse.draw2d.GridLayout layoutTransformationSetNameHolder1 = new org.eclipse.draw2d.GridLayout();&#xA;&#x9;layoutTransformationSetNameHolder1.numColumns = 1;&#xA;&#x9;layoutTransformationSetNameHolder1.makeColumnsEqualWidth = true;&#xA;&#x9;layoutTransformationSetNameHolder1.horizontalSpacing = 0;&#xA;&#x9;layoutTransformationSetNameHolder1.verticalSpacing = 0;&#xA;&#x9;layoutTransformationSetNameHolder1.marginWidth = 0;&#xA;&#x9;layoutTransformationSetNameHolder1.marginHeight = 0;&#xA;&#x9;transformationSetNameHolder1.setLayoutManager(layoutTransformationSetNameHolder1);&#xA;&#xA;&#xA;&#xA;fFigureTransformationSetNameFigure = new org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel();&#xA;&#xA;fFigureTransformationSetNameFigure.setText(&quot;&lt;name>&quot;);&#xA;&#xA;&#xA;org.eclipse.draw2d.GridData constraintFFigureTransformationSetNameFigure = new org.eclipse.draw2d.GridData();&#xA;constraintFFigureTransformationSetNameFigure.verticalAlignment = org.eclipse.draw2d.GridData.CENTER;&#xA;constraintFFigureTransformationSetNameFigure.horizontalAlignment = org.eclipse.draw2d.GridData.CENTER;&#xA;constraintFFigureTransformationSetNameFigure.horizontalIndent = 0;&#xA;constraintFFigureTransformationSetNameFigure.horizontalSpan = 0;&#xA;constraintFFigureTransformationSetNameFigure.verticalSpan = 0;&#xA;constraintFFigureTransformationSetNameFigure.grabExcessHorizontalSpace = true;&#xA;constraintFFigureTransformationSetNameFigure.grabExcessVerticalSpace = true;&#xA;transformationSetNameHolder1.add(fFigureTransformationSetNameFigure, constraintFFigureTransformationSetNameFigure);&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;org.eclipse.draw2d.RectangleFigure transformationSetCompartmentHolder0 = new org.eclipse.draw2d.RectangleFigure();&#xA;&#xA;transformationSetCompartmentHolder0.setFill(false);&#xA;transformationSetCompartmentHolder0.setOutline(false);&#xA;&#xA;&#xA;org.eclipse.draw2d.GridData constraintTransformationSetCompartmentHolder0 = new org.eclipse.draw2d.GridData();&#xA;constraintTransformationSetCompartmentHolder0.verticalAlignment = org.eclipse.draw2d.GridData.FILL;&#xA;constraintTransformationSetCompartmentHolder0.horizontalAlignment = org.eclipse.draw2d.GridData.FILL;&#xA;constraintTransformationSetCompartmentHolder0.horizontalIndent = 0;&#xA;constraintTransformationSetCompartmentHolder0.horizontalSpan = 0;&#xA;constraintTransformationSetCompartmentHolder0.verticalSpan = 0;&#xA;constraintTransformationSetCompartmentHolder0.grabExcessHorizontalSpace = true;&#xA;constraintTransformationSetCompartmentHolder0.grabExcessVerticalSpace = true;&#xA;this.add(transformationSetCompartmentHolder0, constraintTransformationSetCompartmentHolder0);&#xA;&#xA;&#xA;&#x9;org.eclipse.draw2d.GridLayout layoutTransformationSetCompartmentHolder0 = new org.eclipse.draw2d.GridLayout();&#xA;&#x9;layoutTransformationSetCompartmentHolder0.numColumns = 1;&#xA;&#x9;layoutTransformationSetCompartmentHolder0.makeColumnsEqualWidth = true;&#xA;&#x9;layoutTransformationSetCompartmentHolder0.horizontalSpacing = 0;&#xA;&#x9;layoutTransformationSetCompartmentHolder0.verticalSpacing = 0;&#xA;&#x9;layoutTransformationSetCompartmentHolder0.marginWidth = 0;&#xA;&#x9;layoutTransformationSetCompartmentHolder0.marginHeight = 0;&#xA;&#x9;transformationSetCompartmentHolder0.setLayoutManager(layoutTransformationSetCompartmentHolder0);&#xA;&#xA;&#xA;&#xA;fFigureTransformationSetCompartmentFigure = new org.eclipse.draw2d.RectangleFigure();&#xA;&#xA;&#x9;fFigureTransformationSetCompartmentFigure.setForegroundColor(org.eclipse.draw2d.ColorConstants.black);&#xA;&#x9;fFigureTransformationSetCompartmentFigure.setBackgroundColor(FFIGURETRANSFORMATIONSETCOMPARTMENTFIGURE_BACK&#xA;);&#xA;fFigureTransformationSetCompartmentFigure.setBorder(new org.eclipse.draw2d.MarginBorder(getMapMode().DPtoLP(0)&#xA;, getMapMode().DPtoLP(0)&#xA;, getMapMode().DPtoLP(0)&#xA;, getMapMode().DPtoLP(0)&#xA;));&#xA;&#xA;&#xA;org.eclipse.draw2d.GridData constraintFFigureTransformationSetCompartmentFigure = new org.eclipse.draw2d.GridData();&#xA;constraintFFigureTransformationSetCompartmentFigure.verticalAlignment = org.eclipse.draw2d.GridData.FILL;&#xA;constraintFFigureTransformationSetCompartmentFigure.horizontalAlignment = org.eclipse.draw2d.GridData.FILL;&#xA;constraintFFigureTransformationSetCompartmentFigure.horizontalIndent = 0;&#xA;constraintFFigureTransformationSetCompartmentFigure.horizontalSpan = 0;&#xA;constraintFFigureTransformationSetCompartmentFigure.verticalSpan = 0;&#xA;constraintFFigureTransformationSetCompartmentFigure.grabExcessHorizontalSpace = true;&#xA;constraintFFigureTransformationSetCompartmentFigure.grabExcessVerticalSpace = true;&#xA;transformationSetCompartmentHolder0.add(fFigureTransformationSetCompartmentFigure, constraintFFigureTransformationSetCompartmentFigure);&#xA;&#xA;&#xA;&#xA;&#xA;&#x9;}&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel getFigureTransformationSetNameFigure() {&#xA;&#x9;&#x9;return fFigureTransformationSetNameFigure;&#xA;&#x9;}&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public org.eclipse.draw2d.RectangleFigure getFigureTransformationSetCompartmentFigure() {&#xA;&#x9;&#x9;return fFigureTransformationSetCompartmentFigure;&#xA;&#x9;}&#xA;&#xA;&#xA;}&#xA;&#xA;/**&#xA; * @generated&#xA; */&#xA;static final org.eclipse.swt.graphics.Color THIS_BACK = new org.eclipse.swt.graphics.Color(null, 224, 238, 224);&#xA;&#xA;/**&#xA; * @generated&#xA; */&#xA;static final org.eclipse.swt.graphics.Color FFIGURETRANSFORMATIONSETCOMPARTMENTFIGURE_BACK = new org.eclipse.swt.graphics.Color(null, 224, 238, 224);&#xA;&#xA;">
        <attributes
            xsi:type="gmfgen:StyleAttributes"
            fixedForeground="true"
            fixedBackground="true"/>
        <attributes
            xsi:type="gmfgen:DefaultSizeAttributes"
            width="300"
            height="300"/>
      </viewmap>
      <modelFacet>
        <metaClass
            href="transformationDependency.genmodel#//tom/TransformationSet"/>
        <containmentMetaFeature
            href="transformationDependency.genmodel#//tom/TransformationSets/transformationSets"/>
        <childMetaFeature
            href="transformationDependency.genmodel#//tom/TransformationSets/transformationSets"/>
      </modelFacet>
      <labels
          visualID="5007"
          editPartClassName="TransformationSetNameEditPart"
          itemSemanticEditPolicyClassName="TransformationSetNameItemSemanticEditPolicy"
          notationViewFactoryClassName="TransformationSetNameViewFactory"
          elementIcon="true">
        <diagramRunTimeClass
            href="../../../plugin/org.eclipse.gmf.runtime.notation/model/notation.genmodel#//notation/Node"/>
        <viewmap
            xsi:type="gmfgen:ParentAssignedViewmap"
            getterName="getFigureTransformationSetNameFigure"
            figureQualifiedClassName="org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel"/>
        <modelFacet
            xsi:type="gmfgen:FeatureLabelModelFacet"
            parser="//@labelParsers/@implementations.0">
          <metaFeatures
              href="transformationDependency.genmodel#//tom/TransformationSet/name"/>
        </modelFacet>
      </labels>
    </topLevelNodes>
    <topLevelNodes
        visualID="2005"
        editPartClassName="TransformationSetExtensionEditPart"
        itemSemanticEditPolicyClassName="TransformationSetExtensionItemSemanticEditPolicy"
        notationViewFactoryClassName="TransformationSetExtensionViewFactory"
        canonicalEditPolicyClassName="TransformationSetExtensionCanonicalEditPolicy"
        compartments="//@diagram/@compartments.1"
        graphicalNodeEditPolicyClassName="TransformationSetExtensionGraphicalNodeEditPolicy"
        createCommandClassName="TransformationSetExtensionCreateCommand">
      <diagramRunTimeClass
          href="../../../plugin/org.eclipse.gmf.runtime.notation/model/notation.genmodel#//notation/Node"/>
      <elementType
          xsi:type="gmfgen:MetamodelType"
          editHelperClassName="TransformationSetExtensionEditHelper"/>
      <viewmap
          xsi:type="gmfgen:InnerClassViewmap"
          className="TransformationSetExtensionFigure"
          classBody="&#xA;/**&#xA; * @generated&#xA; */&#xA;public class TransformationSetExtensionFigure extends org.eclipse.draw2d.RectangleFigure {&#xA;&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel fFigureTransformationSetExtensionHeaderFigure; &#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel fFigureTransformationSetExtensionTransformationSetIdFigure; &#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private org.eclipse.draw2d.RectangleFigure fFigureTransformationSetExtensionCompartmentFigure; &#xA;&#xA;&#xA;&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public TransformationSetExtensionFigure() {&#xA;&#x9;&#x9;&#xA;&#x9;org.eclipse.draw2d.GridLayout layoutThis = new org.eclipse.draw2d.GridLayout();&#xA;&#x9;layoutThis.numColumns = 1;&#xA;&#x9;layoutThis.makeColumnsEqualWidth = true;&#xA;&#x9;layoutThis.horizontalSpacing = 0;&#xA;&#x9;layoutThis.verticalSpacing = 0;&#xA;&#x9;layoutThis.marginWidth = 0;&#xA;&#x9;layoutThis.marginHeight = 0;&#xA;&#x9;this.setLayoutManager(layoutThis);&#xA;&#xA;&#x9;&#x9;&#x9;this.setForegroundColor(org.eclipse.draw2d.ColorConstants.black);&#xA;&#x9;this.setBackgroundColor(THIS_BACK&#xA;);&#xA;this.setPreferredSize(new org.eclipse.draw2d.geometry.Dimension(getMapMode().DPtoLP(300)&#xA;, getMapMode().DPtoLP(300)&#xA;));&#xA;&#x9;&#x9;createContents();&#xA;&#x9;}&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private void createContents(){&#xA;&#xA;&#xA;org.eclipse.draw2d.RectangleFigure transformationSetExtensionUpperFigure0 = new org.eclipse.draw2d.RectangleFigure();&#xA;&#xA;transformationSetExtensionUpperFigure0.setFill(false);&#xA;transformationSetExtensionUpperFigure0.setOutline(false);&#xA;&#xA;&#xA;org.eclipse.draw2d.GridData constraintTransformationSetExtensionUpperFigure0 = new org.eclipse.draw2d.GridData();&#xA;constraintTransformationSetExtensionUpperFigure0.verticalAlignment = org.eclipse.draw2d.GridData.CENTER;&#xA;constraintTransformationSetExtensionUpperFigure0.horizontalAlignment = org.eclipse.draw2d.GridData.FILL;&#xA;constraintTransformationSetExtensionUpperFigure0.horizontalIndent = 0;&#xA;constraintTransformationSetExtensionUpperFigure0.horizontalSpan = 0;&#xA;constraintTransformationSetExtensionUpperFigure0.verticalSpan = 0;&#xA;constraintTransformationSetExtensionUpperFigure0.grabExcessHorizontalSpace = true;&#xA;constraintTransformationSetExtensionUpperFigure0.grabExcessVerticalSpace = false;&#xA;this.add(transformationSetExtensionUpperFigure0, constraintTransformationSetExtensionUpperFigure0);&#xA;&#xA;&#xA;&#x9;org.eclipse.draw2d.GridLayout layoutTransformationSetExtensionUpperFigure0 = new org.eclipse.draw2d.GridLayout();&#xA;&#x9;layoutTransformationSetExtensionUpperFigure0.numColumns = 1;&#xA;&#x9;layoutTransformationSetExtensionUpperFigure0.makeColumnsEqualWidth = true;&#xA;&#x9;layoutTransformationSetExtensionUpperFigure0.horizontalSpacing = 0;&#xA;&#x9;layoutTransformationSetExtensionUpperFigure0.verticalSpacing = 0;&#xA;&#x9;layoutTransformationSetExtensionUpperFigure0.marginWidth = 0;&#xA;&#x9;layoutTransformationSetExtensionUpperFigure0.marginHeight = 0;&#xA;&#x9;transformationSetExtensionUpperFigure0.setLayoutManager(layoutTransformationSetExtensionUpperFigure0);&#xA;&#xA;&#xA;&#xA;org.eclipse.draw2d.RectangleFigure transformationSetExtensionHeaderHolder1 = new org.eclipse.draw2d.RectangleFigure();&#xA;&#xA;transformationSetExtensionHeaderHolder1.setFill(false);&#xA;transformationSetExtensionHeaderHolder1.setOutline(false);&#xA;&#xA;&#xA;org.eclipse.draw2d.GridData constraintTransformationSetExtensionHeaderHolder1 = new org.eclipse.draw2d.GridData();&#xA;constraintTransformationSetExtensionHeaderHolder1.verticalAlignment = org.eclipse.draw2d.GridData.CENTER;&#xA;constraintTransformationSetExtensionHeaderHolder1.horizontalAlignment = org.eclipse.draw2d.GridData.CENTER;&#xA;constraintTransformationSetExtensionHeaderHolder1.horizontalIndent = 0;&#xA;constraintTransformationSetExtensionHeaderHolder1.horizontalSpan = 1;&#xA;constraintTransformationSetExtensionHeaderHolder1.verticalSpan = 1;&#xA;constraintTransformationSetExtensionHeaderHolder1.grabExcessHorizontalSpace = true;&#xA;constraintTransformationSetExtensionHeaderHolder1.grabExcessVerticalSpace = true;&#xA;transformationSetExtensionUpperFigure0.add(transformationSetExtensionHeaderHolder1, constraintTransformationSetExtensionHeaderHolder1);&#xA;&#xA;&#xA;&#x9;org.eclipse.draw2d.GridLayout layoutTransformationSetExtensionHeaderHolder1 = new org.eclipse.draw2d.GridLayout();&#xA;&#x9;layoutTransformationSetExtensionHeaderHolder1.numColumns = 1;&#xA;&#x9;layoutTransformationSetExtensionHeaderHolder1.makeColumnsEqualWidth = true;&#xA;&#x9;layoutTransformationSetExtensionHeaderHolder1.horizontalSpacing = 0;&#xA;&#x9;layoutTransformationSetExtensionHeaderHolder1.verticalSpacing = 0;&#xA;&#x9;layoutTransformationSetExtensionHeaderHolder1.marginWidth = 0;&#xA;&#x9;layoutTransformationSetExtensionHeaderHolder1.marginHeight = 0;&#xA;&#x9;transformationSetExtensionHeaderHolder1.setLayoutManager(layoutTransformationSetExtensionHeaderHolder1);&#xA;&#xA;&#xA;&#xA;fFigureTransformationSetExtensionHeaderFigure = new org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel();&#xA;&#xA;fFigureTransformationSetExtensionHeaderFigure.setText(&quot;Extension of&quot;);&#xA;&#xA;&#xA;org.eclipse.draw2d.GridData constraintFFigureTransformationSetExtensionHeaderFigure = new org.eclipse.draw2d.GridData();&#xA;constraintFFigureTransformationSetExtensionHeaderFigure.verticalAlignment = org.eclipse.draw2d.GridData.CENTER;&#xA;constraintFFigureTransformationSetExtensionHeaderFigure.horizontalAlignment = org.eclipse.draw2d.GridData.CENTER;&#xA;constraintFFigureTransformationSetExtensionHeaderFigure.horizontalIndent = 0;&#xA;constraintFFigureTransformationSetExtensionHeaderFigure.horizontalSpan = 0;&#xA;constraintFFigureTransformationSetExtensionHeaderFigure.verticalSpan = 0;&#xA;constraintFFigureTransformationSetExtensionHeaderFigure.grabExcessHorizontalSpace = true;&#xA;constraintFFigureTransformationSetExtensionHeaderFigure.grabExcessVerticalSpace = true;&#xA;transformationSetExtensionHeaderHolder1.add(fFigureTransformationSetExtensionHeaderFigure, constraintFFigureTransformationSetExtensionHeaderFigure);&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;org.eclipse.draw2d.RectangleFigure transformationSetExtensionIdHolder1 = new org.eclipse.draw2d.RectangleFigure();&#xA;&#xA;transformationSetExtensionIdHolder1.setFill(false);&#xA;transformationSetExtensionIdHolder1.setOutline(false);&#xA;&#xA;&#xA;org.eclipse.draw2d.GridData constraintTransformationSetExtensionIdHolder1 = new org.eclipse.draw2d.GridData();&#xA;constraintTransformationSetExtensionIdHolder1.verticalAlignment = org.eclipse.draw2d.GridData.CENTER;&#xA;constraintTransformationSetExtensionIdHolder1.horizontalAlignment = org.eclipse.draw2d.GridData.CENTER;&#xA;constraintTransformationSetExtensionIdHolder1.horizontalIndent = 0;&#xA;constraintTransformationSetExtensionIdHolder1.horizontalSpan = 1;&#xA;constraintTransformationSetExtensionIdHolder1.verticalSpan = 1;&#xA;constraintTransformationSetExtensionIdHolder1.grabExcessHorizontalSpace = true;&#xA;constraintTransformationSetExtensionIdHolder1.grabExcessVerticalSpace = true;&#xA;transformationSetExtensionUpperFigure0.add(transformationSetExtensionIdHolder1, constraintTransformationSetExtensionIdHolder1);&#xA;&#xA;&#xA;&#x9;org.eclipse.draw2d.GridLayout layoutTransformationSetExtensionIdHolder1 = new org.eclipse.draw2d.GridLayout();&#xA;&#x9;layoutTransformationSetExtensionIdHolder1.numColumns = 1;&#xA;&#x9;layoutTransformationSetExtensionIdHolder1.makeColumnsEqualWidth = true;&#xA;&#x9;layoutTransformationSetExtensionIdHolder1.horizontalSpacing = 0;&#xA;&#x9;layoutTransformationSetExtensionIdHolder1.verticalSpacing = 0;&#xA;&#x9;layoutTransformationSetExtensionIdHolder1.marginWidth = 0;&#xA;&#x9;layoutTransformationSetExtensionIdHolder1.marginHeight = 0;&#xA;&#x9;transformationSetExtensionIdHolder1.setLayoutManager(layoutTransformationSetExtensionIdHolder1);&#xA;&#xA;&#xA;&#xA;fFigureTransformationSetExtensionTransformationSetIdFigure = new org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel();&#xA;&#xA;fFigureTransformationSetExtensionTransformationSetIdFigure.setText(&quot;&lt;extension>&quot;);&#xA;&#xA;&#xA;org.eclipse.draw2d.GridData constraintFFigureTransformationSetExtensionTransformationSetIdFigure = new org.eclipse.draw2d.GridData();&#xA;constraintFFigureTransformationSetExtensionTransformationSetIdFigure.verticalAlignment = org.eclipse.draw2d.GridData.CENTER;&#xA;constraintFFigureTransformationSetExtensionTransformationSetIdFigure.horizontalAlignment = org.eclipse.draw2d.GridData.CENTER;&#xA;constraintFFigureTransformationSetExtensionTransformationSetIdFigure.horizontalIndent = 0;&#xA;constraintFFigureTransformationSetExtensionTransformationSetIdFigure.horizontalSpan = 0;&#xA;constraintFFigureTransformationSetExtensionTransformationSetIdFigure.verticalSpan = 0;&#xA;constraintFFigureTransformationSetExtensionTransformationSetIdFigure.grabExcessHorizontalSpace = true;&#xA;constraintFFigureTransformationSetExtensionTransformationSetIdFigure.grabExcessVerticalSpace = true;&#xA;transformationSetExtensionIdHolder1.add(fFigureTransformationSetExtensionTransformationSetIdFigure, constraintFFigureTransformationSetExtensionTransformationSetIdFigure);&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;org.eclipse.draw2d.RectangleFigure transformationSetExtensionCompartmentHolder0 = new org.eclipse.draw2d.RectangleFigure();&#xA;&#xA;transformationSetExtensionCompartmentHolder0.setFill(false);&#xA;transformationSetExtensionCompartmentHolder0.setOutline(false);&#xA;&#xA;&#xA;org.eclipse.draw2d.GridData constraintTransformationSetExtensionCompartmentHolder0 = new org.eclipse.draw2d.GridData();&#xA;constraintTransformationSetExtensionCompartmentHolder0.verticalAlignment = org.eclipse.draw2d.GridData.FILL;&#xA;constraintTransformationSetExtensionCompartmentHolder0.horizontalAlignment = org.eclipse.draw2d.GridData.FILL;&#xA;constraintTransformationSetExtensionCompartmentHolder0.horizontalIndent = 0;&#xA;constraintTransformationSetExtensionCompartmentHolder0.horizontalSpan = 0;&#xA;constraintTransformationSetExtensionCompartmentHolder0.verticalSpan = 0;&#xA;constraintTransformationSetExtensionCompartmentHolder0.grabExcessHorizontalSpace = true;&#xA;constraintTransformationSetExtensionCompartmentHolder0.grabExcessVerticalSpace = true;&#xA;this.add(transformationSetExtensionCompartmentHolder0, constraintTransformationSetExtensionCompartmentHolder0);&#xA;&#xA;&#xA;&#x9;org.eclipse.draw2d.GridLayout layoutTransformationSetExtensionCompartmentHolder0 = new org.eclipse.draw2d.GridLayout();&#xA;&#x9;layoutTransformationSetExtensionCompartmentHolder0.numColumns = 1;&#xA;&#x9;layoutTransformationSetExtensionCompartmentHolder0.makeColumnsEqualWidth = true;&#xA;&#x9;layoutTransformationSetExtensionCompartmentHolder0.horizontalSpacing = 0;&#xA;&#x9;layoutTransformationSetExtensionCompartmentHolder0.verticalSpacing = 0;&#xA;&#x9;layoutTransformationSetExtensionCompartmentHolder0.marginWidth = 0;&#xA;&#x9;layoutTransformationSetExtensionCompartmentHolder0.marginHeight = 0;&#xA;&#x9;transformationSetExtensionCompartmentHolder0.setLayoutManager(layoutTransformationSetExtensionCompartmentHolder0);&#xA;&#xA;&#xA;&#xA;fFigureTransformationSetExtensionCompartmentFigure = new org.eclipse.draw2d.RectangleFigure();&#xA;&#xA;&#x9;fFigureTransformationSetExtensionCompartmentFigure.setForegroundColor(org.eclipse.draw2d.ColorConstants.black);&#xA;&#x9;fFigureTransformationSetExtensionCompartmentFigure.setBackgroundColor(FFIGURETRANSFORMATIONSETEXTENSIONCOMPARTMENTFIGURE_BACK&#xA;);&#xA;fFigureTransformationSetExtensionCompartmentFigure.setBorder(new org.eclipse.draw2d.MarginBorder(getMapMode().DPtoLP(0)&#xA;, getMapMode().DPtoLP(0)&#xA;, getMapMode().DPtoLP(0)&#xA;, getMapMode().DPtoLP(0)&#xA;));&#xA;&#xA;&#xA;org.eclipse.draw2d.GridData constraintFFigureTransformationSetExtensionCompartmentFigure = new org.eclipse.draw2d.GridData();&#xA;constraintFFigureTransformationSetExtensionCompartmentFigure.verticalAlignment = org.eclipse.draw2d.GridData.FILL;&#xA;constraintFFigureTransformationSetExtensionCompartmentFigure.horizontalAlignment = org.eclipse.draw2d.GridData.FILL;&#xA;constraintFFigureTransformationSetExtensionCompartmentFigure.horizontalIndent = 0;&#xA;constraintFFigureTransformationSetExtensionCompartmentFigure.horizontalSpan = 0;&#xA;constraintFFigureTransformationSetExtensionCompartmentFigure.verticalSpan = 0;&#xA;constraintFFigureTransformationSetExtensionCompartmentFigure.grabExcessHorizontalSpace = true;&#xA;constraintFFigureTransformationSetExtensionCompartmentFigure.grabExcessVerticalSpace = true;&#xA;transformationSetExtensionCompartmentHolder0.add(fFigureTransformationSetExtensionCompartmentFigure, constraintFFigureTransformationSetExtensionCompartmentFigure);&#xA;&#xA;&#xA;&#xA;&#xA;&#x9;}&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel getFigureTransformationSetExtensionHeaderFigure() {&#xA;&#x9;&#x9;return fFigureTransformationSetExtensionHeaderFigure;&#xA;&#x9;}&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel getFigureTransformationSetExtensionTransformationSetIdFigure() {&#xA;&#x9;&#x9;return fFigureTransformationSetExtensionTransformationSetIdFigure;&#xA;&#x9;}&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public org.eclipse.draw2d.RectangleFigure getFigureTransformationSetExtensionCompartmentFigure() {&#xA;&#x9;&#x9;return fFigureTransformationSetExtensionCompartmentFigure;&#xA;&#x9;}&#xA;&#xA;&#xA;}&#xA;&#xA;/**&#xA; * @generated&#xA; */&#xA;static final org.eclipse.swt.graphics.Color THIS_BACK = new org.eclipse.swt.graphics.Color(null, 224, 238, 224);&#xA;&#xA;/**&#xA; * @generated&#xA; */&#xA;static final org.eclipse.swt.graphics.Color FFIGURETRANSFORMATIONSETEXTENSIONCOMPARTMENTFIGURE_BACK = new org.eclipse.swt.graphics.Color(null, 224, 238, 224);&#xA;&#xA;">
        <attributes
            xsi:type="gmfgen:StyleAttributes"
            fixedForeground="true"
            fixedBackground="true"/>
        <attributes
            xsi:type="gmfgen:DefaultSizeAttributes"
            width="300"
            height="300"/>
      </viewmap>
      <modelFacet>
        <metaClass
            href="transformationDependency.genmodel#//tom/TransformationSetExtension"/>
        <containmentMetaFeature
            href="transformationDependency.genmodel#//tom/TransformationSets/transformationSetExtensions"/>
        <childMetaFeature
            href="transformationDependency.genmodel#//tom/TransformationSets/transformationSetExtensions"/>
      </modelFacet>
      <labels
          visualID="5009"
          editPartClassName="TransformationSetExtensionTransformationSetIdEditPart"
          itemSemanticEditPolicyClassName="TransformationSetExtensionTransformationSetIdItemSemanticEditPolicy"
          notationViewFactoryClassName="TransformationSetExtensionTransformationSetIdViewFactory"
          elementIcon="true">
        <diagramRunTimeClass
            href="../../../plugin/org.eclipse.gmf.runtime.notation/model/notation.genmodel#//notation/Node"/>
        <viewmap
            xsi:type="gmfgen:ParentAssignedViewmap"
            getterName="getFigureTransformationSetExtensionTransformationSetIdFigure"
            figureQualifiedClassName="org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel"/>
        <modelFacet
            xsi:type="gmfgen:FeatureLabelModelFacet"
            parser="//@labelParsers/@implementations.0">
          <metaFeatures
              href="transformationDependency.genmodel#//tom/TransformationSetExtension/transformationSetId"/>
        </modelFacet>
      </labels>
    </topLevelNodes>
    <topLevelNodes
        visualID="2006"
        editPartClassName="ExternalTransformationEditPart"
        itemSemanticEditPolicyClassName="ExternalTransformationItemSemanticEditPolicy"
        notationViewFactoryClassName="ExternalTransformationViewFactory"
        canonicalEditPolicyClassName="ExternalTransformationCanonicalEditPolicy"
        graphicalNodeEditPolicyClassName="ExternalTransformationGraphicalNodeEditPolicy"
        createCommandClassName="ExternalTransformationCreateCommand">
      <diagramRunTimeClass
          href="../../../plugin/org.eclipse.gmf.runtime.notation/model/notation.genmodel#//notation/Node"/>
      <elementType
          xsi:type="gmfgen:MetamodelType"
          editHelperClassName="ExternalTransformationEditHelper"/>
      <viewmap
          xsi:type="gmfgen:InnerClassViewmap"
          className="ExternalTransformationFigure"
          classBody="&#xA;/**&#xA; * @generated&#xA; */&#xA;public class ExternalTransformationFigure extends org.eclipse.draw2d.RectangleFigure {&#xA;&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel fFigureExternalTransformationNameFigure; &#xA;&#xA;&#xA;&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public ExternalTransformationFigure() {&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;this.setForegroundColor(org.eclipse.draw2d.ColorConstants.black);&#xA;&#x9;this.setBackgroundColor(THIS_BACK&#xA;);&#xA;&#x9;&#x9;createContents();&#xA;&#x9;}&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private void createContents(){&#xA;&#xA;&#xA;fFigureExternalTransformationNameFigure = new org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel();&#xA;&#xA;fFigureExternalTransformationNameFigure.setText(&quot;&lt;name>&quot;);&#xA;&#xA;this.add(fFigureExternalTransformationNameFigure);&#xA;&#xA;&#xA;&#x9;}&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel getFigureExternalTransformationNameFigure() {&#xA;&#x9;&#x9;return fFigureExternalTransformationNameFigure;&#xA;&#x9;}&#xA;&#xA;&#xA;}&#xA;&#xA;/**&#xA; * @generated&#xA; */&#xA;static final org.eclipse.swt.graphics.Color THIS_BACK = new org.eclipse.swt.graphics.Color(null, 162, 181, 205);&#xA;&#xA;">
        <attributes
            xsi:type="gmfgen:StyleAttributes"
            fixedForeground="true"
            fixedBackground="true"/>
        <attributes
            xsi:type="gmfgen:DefaultSizeAttributes"
            width="10"
            height="15"/>
      </viewmap>
      <modelFacet>
        <metaClass
            href="transformationDependency.genmodel#//tom/ExternalTransformation"/>
        <containmentMetaFeature
            href="transformationDependency.genmodel#//tom/TransformationSets/externalTransformations"/>
        <childMetaFeature
            href="transformationDependency.genmodel#//tom/TransformationSets/externalTransformations"/>
      </modelFacet>
      <labels
          visualID="5010"
          editPartClassName="ExternalTransformationNameEditPart"
          itemSemanticEditPolicyClassName="ExternalTransformationNameItemSemanticEditPolicy"
          notationViewFactoryClassName="ExternalTransformationNameViewFactory"
          elementIcon="true">
        <diagramRunTimeClass
            href="../../../plugin/org.eclipse.gmf.runtime.notation/model/notation.genmodel#//notation/Node"/>
        <viewmap
            xsi:type="gmfgen:ParentAssignedViewmap"
            getterName="getFigureExternalTransformationNameFigure"
            figureQualifiedClassName="org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel"/>
        <modelFacet
            xsi:type="gmfgen:FeatureLabelModelFacet"
            parser="//@labelParsers/@implementations.0">
          <metaFeatures
              href="transformationDependency.genmodel#//tom/TransformationReference/name"/>
        </modelFacet>
      </labels>
    </topLevelNodes>
    <links
        visualID="4004"
        editPartClassName="SelfRequirementEditPart"
        itemSemanticEditPolicyClassName="SelfRequirementItemSemanticEditPolicy"
        notationViewFactoryClassName="SelfRequirementViewFactory"
        createCommandClassName="SelfRequirementCreateCommand"
        reorientCommandClassName="SelfRequirementReorientCommand">
      <diagramRunTimeClass
          href="../../../plugin/org.eclipse.gmf.runtime.notation/model/notation.genmodel#//notation/Edge"/>
      <elementType
          xsi:type="gmfgen:MetamodelType"
          editHelperClassName="SelfRequirementEditHelper"/>
      <viewmap
          xsi:type="gmfgen:InnerClassViewmap"
          className="SelfRequirementFigure"
          classBody="&#xA;/**&#xA; * @generated&#xA; */&#xA;public class SelfRequirementFigure extends org.eclipse.gmf.runtime.draw2d.ui.figures.PolylineConnectionEx {&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public SelfRequirementFigure() {&#xA;&#x9;&#x9;this.setLineStyle(org.eclipse.draw2d.Graphics.LINE_DASH);&#xA;&#x9;this.setForegroundColor(org.eclipse.draw2d.ColorConstants.black);&#xA;&#xA;&#x9;&#x9;setTargetDecoration(createTargetDecoration());&#xA;&#x9;}&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private org.eclipse.draw2d.RotatableDecoration createTargetDecoration() {&#xA;&#x9;&#x9;org.eclipse.draw2d.PolylineDecoration df = new org.eclipse.draw2d.PolylineDecoration();&#xA;&#x9;&#x9;return df;&#xA;&#x9;}&#xA;&#xA;&#xA;&#xA;&#xA;}&#xA;&#xA;">
        <attributes
            xsi:type="gmfgen:StyleAttributes"
            fixedForeground="true"/>
      </viewmap>
      <modelFacet
          xsi:type="gmfgen:TypeLinkModelFacet">
        <metaClass
            href="transformationDependency.genmodel#//tom/SelfRequirement"/>
        <containmentMetaFeature
            href="transformationDependency.genmodel#//tom/Transformation/requirements"/>
        <childMetaFeature
            href="transformationDependency.genmodel#//tom/Transformation/requirements"/>
        <targetMetaFeature
            href="transformationDependency.genmodel#//tom/Requirement/reference"/>
      </modelFacet>
      <labels
          visualID="6004"
          editPartClassName="SelfRequirementLabelEditPart"
          itemSemanticEditPolicyClassName="SelfRequirementLabelItemSemanticEditPolicy"
          notationViewFactoryClassName="SelfRequirementLabelViewFactory"
          readOnly="true">
        <diagramRunTimeClass
            href="../../../plugin/org.eclipse.gmf.runtime.notation/model/notation.genmodel#//notation/Node"/>
        <viewmap
            xsi:type="gmfgen:InnerClassViewmap"
            className="SelfRequirementLabelFigure"
            classBody="&#xA;/**&#xA; * @generated&#xA; */&#xA;public class SelfRequirementLabelFigure extends org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel {&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public SelfRequirementLabelFigure() {&#xA;&#x9;&#x9;&#x9;&#x9;this.setText(&quot;&lt;&lt;self>>&quot;);&#xA;&#x9;}&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;}&#xA;&#xA;">
          <attributes
              xsi:type="gmfgen:LabelOffsetAttributes"
              y="40"/>
        </viewmap>
        <modelFacet
            parser="//@labelParsers/@implementations.1"/>
      </labels>
    </links>
    <links
        visualID="4005"
        editPartClassName="ParentRequirementEditPart"
        itemSemanticEditPolicyClassName="ParentRequirementItemSemanticEditPolicy"
        notationViewFactoryClassName="ParentRequirementViewFactory"
        createCommandClassName="ParentRequirementCreateCommand"
        reorientCommandClassName="ParentRequirementReorientCommand">
      <diagramRunTimeClass
          href="../../../plugin/org.eclipse.gmf.runtime.notation/model/notation.genmodel#//notation/Edge"/>
      <elementType
          xsi:type="gmfgen:MetamodelType"
          editHelperClassName="ParentRequirementEditHelper"/>
      <viewmap
          xsi:type="gmfgen:InnerClassViewmap"
          className="ParentRequirementFigure"
          classBody="&#xA;/**&#xA; * @generated&#xA; */&#xA;public class ParentRequirementFigure extends org.eclipse.gmf.runtime.draw2d.ui.figures.PolylineConnectionEx {&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public ParentRequirementFigure() {&#xA;&#x9;&#x9;&#x9;this.setForegroundColor(org.eclipse.draw2d.ColorConstants.black);&#xA;&#xA;&#x9;&#x9;setTargetDecoration(createTargetDecoration());&#xA;&#x9;}&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private org.eclipse.draw2d.RotatableDecoration createTargetDecoration() {&#xA;&#x9;&#x9;org.eclipse.draw2d.PolylineDecoration df = new org.eclipse.draw2d.PolylineDecoration();&#xA;&#x9;&#x9;return df;&#xA;&#x9;}&#xA;&#xA;&#xA;&#xA;&#xA;}&#xA;&#xA;">
        <attributes
            xsi:type="gmfgen:StyleAttributes"
            fixedForeground="true"/>
      </viewmap>
      <modelFacet
          xsi:type="gmfgen:TypeLinkModelFacet">
        <metaClass
            href="transformationDependency.genmodel#//tom/ParentRequirement"/>
        <containmentMetaFeature
            href="transformationDependency.genmodel#//tom/Transformation/requirements"/>
        <childMetaFeature
            href="transformationDependency.genmodel#//tom/Transformation/requirements"/>
        <targetMetaFeature
            href="transformationDependency.genmodel#//tom/Requirement/reference"/>
      </modelFacet>
      <labels
          visualID="6005"
          editPartClassName="ParentRequirementLabelEditPart"
          itemSemanticEditPolicyClassName="ParentRequirementLabelItemSemanticEditPolicy"
          notationViewFactoryClassName="ParentRequirementLabelViewFactory"
          readOnly="true">
        <diagramRunTimeClass
            href="../../../plugin/org.eclipse.gmf.runtime.notation/model/notation.genmodel#//notation/Node"/>
        <viewmap
            xsi:type="gmfgen:InnerClassViewmap"
            className="ParentRequirementLabelFigure"
            classBody="&#xA;/**&#xA; * @generated&#xA; */&#xA;public class ParentRequirementLabelFigure extends org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel {&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public ParentRequirementLabelFigure() {&#xA;&#x9;&#x9;&#x9;&#x9;this.setText(&quot;&lt;&lt;parent>>&quot;);&#xA;&#x9;}&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;}&#xA;&#xA;">
          <attributes
              xsi:type="gmfgen:LabelOffsetAttributes"
              y="40"/>
        </viewmap>
        <modelFacet
            parser="//@labelParsers/@implementations.1"/>
      </labels>
    </links>
    <links
        visualID="4006"
        editPartClassName="CustomRequirementEditPart"
        itemSemanticEditPolicyClassName="CustomRequirementItemSemanticEditPolicy"
        notationViewFactoryClassName="CustomRequirementViewFactory"
        createCommandClassName="CustomRequirementCreateCommand"
        reorientCommandClassName="CustomRequirementReorientCommand">
      <diagramRunTimeClass
          href="../../../plugin/org.eclipse.gmf.runtime.notation/model/notation.genmodel#//notation/Edge"/>
      <elementType
          xsi:type="gmfgen:MetamodelType"
          editHelperClassName="CustomRequirementEditHelper"/>
      <viewmap
          xsi:type="gmfgen:InnerClassViewmap"
          className="CustomRequirementFigure"
          classBody="&#xA;/**&#xA; * @generated&#xA; */&#xA;public class CustomRequirementFigure extends org.eclipse.gmf.runtime.draw2d.ui.figures.PolylineConnectionEx {&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public CustomRequirementFigure() {&#xA;&#x9;&#x9;this.setLineStyle(org.eclipse.draw2d.Graphics.LINE_DOT);&#xA;&#x9;this.setForegroundColor(org.eclipse.draw2d.ColorConstants.black);&#xA;&#xA;&#x9;&#x9;setTargetDecoration(createTargetDecoration());&#xA;&#x9;}&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private org.eclipse.draw2d.RotatableDecoration createTargetDecoration() {&#xA;&#x9;&#x9;org.eclipse.draw2d.PolylineDecoration df = new org.eclipse.draw2d.PolylineDecoration();&#xA;&#x9;&#x9;return df;&#xA;&#x9;}&#xA;&#xA;&#xA;&#xA;&#xA;}&#xA;&#xA;">
        <attributes
            xsi:type="gmfgen:StyleAttributes"
            fixedForeground="true"/>
      </viewmap>
      <modelFacet
          xsi:type="gmfgen:TypeLinkModelFacet">
        <metaClass
            href="transformationDependency.genmodel#//tom/CustomRequirement"/>
        <containmentMetaFeature
            href="transformationDependency.genmodel#//tom/Transformation/requirements"/>
        <childMetaFeature
            href="transformationDependency.genmodel#//tom/Transformation/requirements"/>
        <targetMetaFeature
            href="transformationDependency.genmodel#//tom/Requirement/reference"/>
      </modelFacet>
      <labels
          visualID="6006"
          editPartClassName="CustomRequirementLabelEditPart"
          itemSemanticEditPolicyClassName="CustomRequirementLabelItemSemanticEditPolicy"
          notationViewFactoryClassName="CustomRequirementLabelViewFactory"
          readOnly="true">
        <diagramRunTimeClass
            href="../../../plugin/org.eclipse.gmf.runtime.notation/model/notation.genmodel#//notation/Node"/>
        <viewmap
            xsi:type="gmfgen:InnerClassViewmap"
            className="CustomRequirementLabelFigure"
            classBody="&#xA;/**&#xA; * @generated&#xA; */&#xA;public class CustomRequirementLabelFigure extends org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel {&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public CustomRequirementLabelFigure() {&#xA;&#x9;&#x9;&#x9;&#x9;this.setText(&quot;&lt;&lt;custom>>&quot;);&#xA;&#x9;}&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;}&#xA;&#xA;">
          <attributes
              xsi:type="gmfgen:LabelOffsetAttributes"
              y="40"/>
        </viewmap>
        <modelFacet
            parser="//@labelParsers/@implementations.1"/>
      </labels>
    </links>
    <compartments
        visualID="7003"
        editPartClassName="TransformationSetTransformationSetCompartmentEditPart"
        itemSemanticEditPolicyClassName="TransformationSetTransformationSetCompartmentItemSemanticEditPolicy"
        notationViewFactoryClassName="TransformationSetTransformationSetCompartmentViewFactory"
        canonicalEditPolicyClassName="TransformationSetTransformationSetCompartmentCanonicalEditPolicy"
        childNodes="//@diagram/@childNodes.0"
        title="TransformationSetCompartment"
        needsTitle="false"
        node="//@diagram/@topLevelNodes.0"
        listLayout="false">
      <diagramRunTimeClass
          href="../../../plugin/org.eclipse.gmf.runtime.notation/model/notation.genmodel#//notation/Node"/>
      <viewmap
          xsi:type="gmfgen:ParentAssignedViewmap"
          getterName="getFigureTransformationSetCompartmentFigure"
          figureQualifiedClassName="org.eclipse.draw2d.RectangleFigure">
        <attributes
            xsi:type="gmfgen:StyleAttributes"
            fixedForeground="true"
            fixedBackground="true"/>
      </viewmap>
    </compartments>
    <compartments
        visualID="7004"
        editPartClassName="TransformationSetExtensionTransformationSetExtensionCompartmentEditPart"
        itemSemanticEditPolicyClassName="TransformationSetExtensionTransformationSetExtensionCompartmentItemSemanticEditPolicy"
        notationViewFactoryClassName="TransformationSetExtensionTransformationSetExtensionCompartmentViewFactory"
        canonicalEditPolicyClassName="TransformationSetExtensionTransformationSetExtensionCompartmentCanonicalEditPolicy"
        childNodes="//@diagram/@childNodes.1"
        title="TransformationSetExtensionCompartment"
        needsTitle="false"
        node="//@diagram/@topLevelNodes.1"
        listLayout="false">
      <diagramRunTimeClass
          href="../../../plugin/org.eclipse.gmf.runtime.notation/model/notation.genmodel#//notation/Node"/>
      <viewmap
          xsi:type="gmfgen:ParentAssignedViewmap"
          getterName="getFigureTransformationSetExtensionCompartmentFigure"
          figureQualifiedClassName="org.eclipse.draw2d.RectangleFigure">
        <attributes
            xsi:type="gmfgen:StyleAttributes"
            fixedForeground="true"
            fixedBackground="true"/>
      </viewmap>
    </compartments>
    <palette>
      <groups
          title="transformations">
        <entries
            xsi:type="gmfgen:ToolEntry"
            title="TransformationSet"
            description="Create new TransformationSet"
            smallIconPath="/net.atos.optimus.m2m.engine.sdk.tom.edit/icons/full/obj16/TransformationSet.gif"
            genNodes="//@diagram/@topLevelNodes.0"/>
        <entries
            xsi:type="gmfgen:ToolEntry"
            title="TransformationSetExtension"
            description="Create new TransformationSetExtension"
            smallIconPath="/net.atos.optimus.m2m.engine.sdk.tom.edit/icons/full/obj16/TransformationSetExtension.gif"
            genNodes="//@diagram/@topLevelNodes.1"/>
        <entries
            xsi:type="gmfgen:ToolEntry"
            title="Transformation"
            description="Create new Transformation"
            smallIconPath="/net.atos.optimus.m2m.engine.sdk.tom.edit/icons/full/obj16/Transformation.gif"
            genNodes="//@diagram/@childNodes.0 //@diagram/@childNodes.1"/>
        <entries
            xsi:type="gmfgen:ToolEntry"
            title="External Transformation"
            description="Create new External Transformation"
            smallIconPath="/net.atos.optimus.m2m.engine.sdk.tom.edit/icons/full/obj16/ExternalTransformation.gif"
            genNodes="//@diagram/@topLevelNodes.2"/>
        <entries
            xsi:type="gmfgen:ToolEntry"
            title="SelfRequirement"
            description="Create new SelfRequirement"
            smallIconPath="/net.atos.optimus.m2m.engine.sdk.tom.edit/icons/full/obj16/SelfRequirement.gif"
            genLinks="//@diagram/@links.0"/>
        <entries
            xsi:type="gmfgen:ToolEntry"
            title="ParentRequirement"
            description="Create new ParentRequirement"
            smallIconPath="/net.atos.optimus.m2m.engine.sdk.tom.edit/icons/full/obj16/ParentRequirement.gif"
            genLinks="//@diagram/@links.1"/>
        <entries
            xsi:type="gmfgen:ToolEntry"
            title="CustomRequirement"
            description="Create new CustomRequirement"
            smallIconPath="/net.atos.optimus.m2m.engine.sdk.tom.edit/icons/full/obj16/CustomRequirement.gif"
            genLinks="//@diagram/@links.2"/>
      </groups>
    </palette>
    <preferencePages
        xsi:type="gmfgen:GenStandardPreferencePage"
        iD="net.atos.optimus.m2m.engine.sdk.tom.diagram.general"
        name="TransformationDependency Diagram">
      <children
          xsi:type="gmfgen:GenStandardPreferencePage"
          iD="net.atos.optimus.m2m.engine.sdk.tom.diagram.appearance"
          name="Appearance"
          kind="Appearance"/>
      <children
          xsi:type="gmfgen:GenStandardPreferencePage"
          iD="net.atos.optimus.m2m.engine.sdk.tom.diagram.connections"
          name="Connections"
          kind="Connections"/>
      <children
          xsi:type="gmfgen:GenStandardPreferencePage"
          iD="net.atos.optimus.m2m.engine.sdk.tom.diagram.printing"
          name="Printing"
          kind="Printing"/>
      <children
          xsi:type="gmfgen:GenStandardPreferencePage"
          iD="net.atos.optimus.m2m.engine.sdk.tom.diagram.rulersAndGrid"
          name="Rulers And Grid"
          kind="RulersAndGrid"/>
    </preferencePages>
  </diagram>
  <plugin>
    <requiredPlugins>org.eclipse.gmf.tooling.runtime</requiredPlugins>
    <requiredPlugins>org.eclipse.draw2d</requiredPlugins>
    <requiredPlugins>org.eclipse.gmf.runtime.draw2d.ui</requiredPlugins>
  </plugin>
  <editor/>
  <navigator>
    <childReferences
        child="//@diagram"/>
    <childReferences
        parent="//@diagram/@topLevelNodes.0"
        child="//@diagram/@childNodes.0"/>
    <childReferences
        parent="//@diagram"
        child="//@diagram/@topLevelNodes.0"/>
    <childReferences
        parent="//@diagram/@topLevelNodes.1"
        child="//@diagram/@childNodes.1"/>
    <childReferences
        parent="//@diagram"
        child="//@diagram/@topLevelNodes.1"/>
    <childReferences
        parent="//@diagram"
        child="//@diagram/@topLevelNodes.2"/>
    <childReferences
        parent="//@diagram"
        child="//@diagram/@links.0"
        groupName="links"
        groupIcon="icons/linksNavigatorGroup.gif"/>
    <childReferences
        parent="//@diagram/@links.0"
        child="//@diagram/@topLevelNodes.2"
        referenceType="out_target"
        groupName="target"
        groupIcon="icons/linkTargetNavigatorGroup.gif"/>
    <childReferences
        parent="//@diagram/@topLevelNodes.2"
        child="//@diagram/@links.0"
        referenceType="in_source"
        groupName="incoming links"
        groupIcon="icons/incomingLinksNavigatorGroup.gif"/>
    <childReferences
        parent="//@diagram/@links.0"
        child="//@diagram/@childNodes.0"
        referenceType="out_target"
        groupName="target"
        groupIcon="icons/linkTargetNavigatorGroup.gif"/>
    <childReferences
        parent="//@diagram/@childNodes.0"
        child="//@diagram/@links.0"
        referenceType="in_source"
        groupName="incoming links"
        groupIcon="icons/incomingLinksNavigatorGroup.gif"/>
    <childReferences
        parent="//@diagram/@links.0"
        child="//@diagram/@childNodes.1"
        referenceType="out_target"
        groupName="target"
        groupIcon="icons/linkTargetNavigatorGroup.gif"/>
    <childReferences
        parent="//@diagram/@childNodes.1"
        child="//@diagram/@links.0"
        referenceType="in_source"
        groupName="incoming links"
        groupIcon="icons/incomingLinksNavigatorGroup.gif"/>
    <childReferences
        parent="//@diagram/@links.0"
        child="//@diagram/@childNodes.0"
        referenceType="in_source"
        groupName="source"
        groupIcon="icons/linkSourceNavigatorGroup.gif"/>
    <childReferences
        parent="//@diagram/@childNodes.0"
        child="//@diagram/@links.0"
        referenceType="out_target"
        groupName="outgoing links"
        groupIcon="icons/outgoingLinksNavigatorGroup.gif"/>
    <childReferences
        parent="//@diagram/@links.0"
        child="//@diagram/@childNodes.1"
        referenceType="in_source"
        groupName="source"
        groupIcon="icons/linkSourceNavigatorGroup.gif"/>
    <childReferences
        parent="//@diagram/@childNodes.1"
        child="//@diagram/@links.0"
        referenceType="out_target"
        groupName="outgoing links"
        groupIcon="icons/outgoingLinksNavigatorGroup.gif"/>
    <childReferences
        parent="//@diagram"
        child="//@diagram/@links.1"
        groupName="links"
        groupIcon="icons/linksNavigatorGroup.gif"/>
    <childReferences
        parent="//@diagram/@links.1"
        child="//@diagram/@topLevelNodes.2"
        referenceType="out_target"
        groupName="target"
        groupIcon="icons/linkTargetNavigatorGroup.gif"/>
    <childReferences
        parent="//@diagram/@topLevelNodes.2"
        child="//@diagram/@links.1"
        referenceType="in_source"
        groupName="incoming links"
        groupIcon="icons/incomingLinksNavigatorGroup.gif"/>
    <childReferences
        parent="//@diagram/@links.1"
        child="//@diagram/@childNodes.0"
        referenceType="out_target"
        groupName="target"
        groupIcon="icons/linkTargetNavigatorGroup.gif"/>
    <childReferences
        parent="//@diagram/@childNodes.0"
        child="//@diagram/@links.1"
        referenceType="in_source"
        groupName="incoming links"
        groupIcon="icons/incomingLinksNavigatorGroup.gif"/>
    <childReferences
        parent="//@diagram/@links.1"
        child="//@diagram/@childNodes.1"
        referenceType="out_target"
        groupName="target"
        groupIcon="icons/linkTargetNavigatorGroup.gif"/>
    <childReferences
        parent="//@diagram/@childNodes.1"
        child="//@diagram/@links.1"
        referenceType="in_source"
        groupName="incoming links"
        groupIcon="icons/incomingLinksNavigatorGroup.gif"/>
    <childReferences
        parent="//@diagram/@links.1"
        child="//@diagram/@childNodes.0"
        referenceType="in_source"
        groupName="source"
        groupIcon="icons/linkSourceNavigatorGroup.gif"/>
    <childReferences
        parent="//@diagram/@childNodes.0"
        child="//@diagram/@links.1"
        referenceType="out_target"
        groupName="outgoing links"
        groupIcon="icons/outgoingLinksNavigatorGroup.gif"/>
    <childReferences
        parent="//@diagram/@links.1"
        child="//@diagram/@childNodes.1"
        referenceType="in_source"
        groupName="source"
        groupIcon="icons/linkSourceNavigatorGroup.gif"/>
    <childReferences
        parent="//@diagram/@childNodes.1"
        child="//@diagram/@links.1"
        referenceType="out_target"
        groupName="outgoing links"
        groupIcon="icons/outgoingLinksNavigatorGroup.gif"/>
    <childReferences
        parent="//@diagram"
        child="//@diagram/@links.2"
        groupName="links"
        groupIcon="icons/linksNavigatorGroup.gif"/>
    <childReferences
        parent="//@diagram/@links.2"
        child="//@diagram/@topLevelNodes.2"
        referenceType="out_target"
        groupName="target"
        groupIcon="icons/linkTargetNavigatorGroup.gif"/>
    <childReferences
        parent="//@diagram/@topLevelNodes.2"
        child="//@diagram/@links.2"
        referenceType="in_source"
        groupName="incoming links"
        groupIcon="icons/incomingLinksNavigatorGroup.gif"/>
    <childReferences
        parent="//@diagram/@links.2"
        child="//@diagram/@childNodes.0"
        referenceType="out_target"
        groupName="target"
        groupIcon="icons/linkTargetNavigatorGroup.gif"/>
    <childReferences
        parent="//@diagram/@childNodes.0"
        child="//@diagram/@links.2"
        referenceType="in_source"
        groupName="incoming links"
        groupIcon="icons/incomingLinksNavigatorGroup.gif"/>
    <childReferences
        parent="//@diagram/@links.2"
        child="//@diagram/@childNodes.1"
        referenceType="out_target"
        groupName="target"
        groupIcon="icons/linkTargetNavigatorGroup.gif"/>
    <childReferences
        parent="//@diagram/@childNodes.1"
        child="//@diagram/@links.2"
        referenceType="in_source"
        groupName="incoming links"
        groupIcon="icons/incomingLinksNavigatorGroup.gif"/>
    <childReferences
        parent="//@diagram/@links.2"
        child="//@diagram/@childNodes.0"
        referenceType="in_source"
        groupName="source"
        groupIcon="icons/linkSourceNavigatorGroup.gif"/>
    <childReferences
        parent="//@diagram/@childNodes.0"
        child="//@diagram/@links.2"
        referenceType="out_target"
        groupName="outgoing links"
        groupIcon="icons/outgoingLinksNavigatorGroup.gif"/>
    <childReferences
        parent="//@diagram/@links.2"
        child="//@diagram/@childNodes.1"
        referenceType="in_source"
        groupName="source"
        groupIcon="icons/linkSourceNavigatorGroup.gif"/>
    <childReferences
        parent="//@diagram/@childNodes.1"
        child="//@diagram/@links.2"
        referenceType="out_target"
        groupName="outgoing links"
        groupIcon="icons/outgoingLinksNavigatorGroup.gif"/>
  </navigator>
  <diagramUpdater/>
  <propertySheet>
    <tabs
        xsi:type="gmfgen:GenStandardPropertyTab"
        iD="appearance"/>
    <tabs
        xsi:type="gmfgen:GenStandardPropertyTab"
        iD="diagram"/>
    <tabs
        xsi:type="gmfgen:GenCustomPropertyTab"
        iD="domain"
        label="Core">
      <filter
          xsi:type="gmfgen:TypeTabFilter">
        <types>org.eclipse.gmf.runtime.notation.View</types>
        <types>org.eclipse.gef.EditPart</types>
        <generatedTypes>abstractNavigatorItem</generatedTypes>
      </filter>
    </tabs>
  </propertySheet>
  <domainGenModel
      href="transformationDependency.genmodel#/"/>
  <labelParsers
      extensibleViaService="true">
    <implementations
        xsi:type="gmfgen:PredefinedParser"
        uses="//@diagram/@childNodes.0/@labels.0/@modelFacet //@diagram/@topLevelNodes.0/@labels.0/@modelFacet //@diagram/@childNodes.1/@labels.0/@modelFacet //@diagram/@topLevelNodes.1/@labels.0/@modelFacet //@diagram/@topLevelNodes.2/@labels.0/@modelFacet"/>
    <implementations
        xsi:type="gmfgen:ExternalParser"
        uses="//@diagram/@links.0/@labels.0/@modelFacet //@diagram/@links.1/@labels.0/@modelFacet //@diagram/@links.2/@labels.0/@modelFacet"/>
  </labelParsers>
  <contextMenus
      context="//@diagram">
    <items
        xsi:type="gmfgen:LoadResourceAction"/>
  </contextMenus>
</gmfgen:GenEditorGenerator>
